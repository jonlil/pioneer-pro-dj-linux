use bytes::Bytes;
use super::packets::{DBMessage, ManyDBMessages};
use super::db_field::DBField;
use super::db_message_argument::ArgumentCollection;
use super::db_request_type::DBRequestType;
use super::metadata_type;
use nom::IResult;

type DBMessageParseResult<'a> = IResult<&'a [u8], DBMessage>;
type DBMessageParse<'a> = DBMessage;

/// (TypeRequest, TypeResponse, RenderRequest, RenderResponse)
type IntegrationTestDialog = (Bytes, Bytes, Bytes, Bytes);

pub fn title_by_artist_album_single_track_dialog() -> IntegrationTestDialog {
    (
        // QueryRequest
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x1a]),
            DBRequestType::TitleByArtistAlbumRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x03, 0x04, 0x01]),
                DBField::from([0x00, 0x00, 0x00, 0x00]),
                DBField::from([0x00, 0x00, 0x00, 0x01]),
                DBField::from([0x00, 0x00, 0x00, 0x00]),
            ]),
        )),

        // QueryResponse
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x1a]),
            DBRequestType::Success,
            ArgumentCollection::new(vec![
                DBField::from([0x00, 0x00, 0x12, 0x02]),
                DBField::from(2u32),
            ]),
        )),

        // RenderRequest
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x1a]),
            DBRequestType::RenderRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x03, 0x04, 0x01]),
                DBField::from(0u32),
                DBField::from(1u32),
                DBField::from(0u32),
                DBField::from(2u32),
                DBField::from(0u32),
            ]),
        )),

        // RenderResponse
        Bytes::from(ManyDBMessages::new(vec![
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x1a]),
                DBRequestType::MenuHeader,
                ArgumentCollection::new(vec![
                    DBField::from(1u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x1a]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(5u32),
                    DBField::from(26u32),
                    DBField::from("Demo Track 1"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(4u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x1a]),
                DBRequestType::MenuFooter,
                ArgumentCollection::new(vec![]),
            )
        ])),
    )
}

pub fn title_by_artist_album_dialog() -> IntegrationTestDialog {
    (
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x16]),
            DBRequestType::TitleByArtistAlbumRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x02, 0x04, 0x01]), // player metadata
                DBField::from(0u32), // sort_id
                DBField::from(1u32), // item_id
                DBField::from(0u32), // item_id
            ]),
        )),
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x16]),
            DBRequestType::Success,
            ArgumentCollection::new(vec![
                DBField::from([0x00, 0x00, 0x12, 0x02]),
                DBField::from(2u32),
            ]),
        )),
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x17]),
            DBRequestType::RenderRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x02, 0x04, 0x01]),
                DBField::from(0u32),
                DBField::from(2u32),
                DBField::from(0u32),
                DBField::from(2u32),
                DBField::from(0u32),
            ]),
        )),

        Bytes::from(ManyDBMessages::new(vec![
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x17]),
                DBRequestType::MenuHeader,
                ArgumentCollection::new(vec![
                    DBField::from(1u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x17]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(5u32),
                    DBField::from(26u32),
                    DBField::from("Demo Track 1"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::TITLE),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x17]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(6u32),
                    DBField::from(26u32),
                    DBField::from("Demo Track 2"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::TITLE),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x17]),
                DBRequestType::MenuFooter,
                ArgumentCollection::new(vec![]),
            ),
        ]))
    )
}

pub fn album_by_artist_dialog() -> IntegrationTestDialog {
    (
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x14]),
            DBRequestType::AlbumByArtistRequest,
            ArgumentCollection::new(vec![
                // Player metadata
                DBField::from([0x02, 0x02, 0x04, 0x01]),
                // sort_id
                DBField::from(0u32),
                // menu_id
                DBField::from(1u32),

            ]),
        )),

        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x14]),
            DBRequestType::Success,
            ArgumentCollection::new(vec![
                DBField::from([0x00, 0x00, 0x11, 0x02]),
                DBField::from(1u32),
            ]),
        )),

        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x15]),
            DBRequestType::RenderRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x02, 0x04, 0x01]),
                DBField::from(0u32),
                DBField::from(1u32),
                DBField::from(0u32),
                DBField::from(1u32),
                DBField::from(0u32),
            ]),
        )),

        Bytes::from(ManyDBMessages::new(vec![
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x15]),
                DBRequestType::MenuHeader,
                ArgumentCollection::new(vec![
                    DBField::from(1u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x15]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(16u32),
                    DBField::from("Unknown"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::ALBUM),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x15]),
                DBRequestType::MenuFooter,
                ArgumentCollection::new(vec![]),
            ),
        ])),
    )
}

pub fn setup_request_packet<'a>() -> DBMessageParseResult<'a> {
    DBMessage::parse(&[
        0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0xff, 0xff,
        0xff, 0xfe, 0x10, 0x00, 0x00, 0x0f, 0x01, 0x14,
        0x00, 0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x00, 0x00, 0x02,
    ])
}

pub fn setup_response_packet() -> Bytes {
    Bytes::from(vec![
        0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0xff, 0xff,
        0xff, 0xfe, 0x10, 0x40, 0x00, 0x0f, 0x02, 0x14,
        0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
        0x00, 0x11,
    ])
}

pub fn root_menu_dialog() -> IntegrationTestDialog {
    (
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x32]),
            DBRequestType::RootMenuRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x01, 0x04, 0x01]),
                DBField::from(0u32),
                DBField::from([0x00, 0xff, 0xff, 0xff]),
            ])
        )),

        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x32]),
            DBRequestType::Success,
            ArgumentCollection::new(vec![
                DBField::from([0x00, 0x00, 0x10, 0x00]),
                DBField::from([0x00, 0x00, 0x00, 0x08]),
            ]),
        )),

        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x0f]),
            DBRequestType::RenderRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x01, 0x04, 0x01]),
                DBField::from(0u32),
                DBField::from(7u32),
                DBField::from(0u32),
                DBField::from(8u32),
                DBField::from(0u32),
            ]),
        )),

        // Render response
        Bytes::from(ManyDBMessages::new(vec![
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuHeader,
                ArgumentCollection::new(vec![
                    DBField::from(1u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(2u32),
                    DBField::from(18u32),
                    DBField::from("\u{fffa}ARTIST\u{fffb}"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::ROOT_ARTIST),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(3u32),
                    DBField::from(16u32),
                    DBField::from("\u{fffa}ALBUM\u{fffb}"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from([0x00, 0x00, 0x00, 0x82]),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(4u32),
                    DBField::from(16u32),
                    DBField::from("\u{fffa}TRACK\u{fffb}"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::ROOT_TRACK),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(12u32),
                    DBField::from(12u32),
                    DBField::from("\u{fffa}KEY\u{fffb}"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::ROOT_KEY),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(5u32),
                    DBField::from(22u32),
                    DBField::from("\u{fffa}PLAYLIST\u{fffb}"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::ROOT_PLAYLIST),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(22u32),
                    DBField::from(20u32),
                    DBField::from("\u{fffa}HISTORY\u{fffb}"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::ROOT_HISTORY),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(18u32),
                    DBField::from(18u32),
                    DBField::from("\u{fffa}SEARCH\u{fffb}"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::ROOT_SEARCH),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x0f]),
                DBRequestType::MenuFooter,
                ArgumentCollection::new(vec![
                    DBField::from(1u32),
                    DBField::from(1u32),
                ]),
            ),
        ])),
    )
}

pub fn artist_request_type<'a>() -> DBMessageParse<'a> {
    DBMessage::parse(&[
        0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80, 0x00, 0x10, 0x10, 0x10, 0x02, 0x0f, 0x02, 0x14,
        0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x11, 0x02, 0x02, 0x04, 0x01, 0x11, 0x00, 0x00, 0x00, 0x00
    ]).unwrap().1
}

pub fn artist_dialog() -> (Bytes, Bytes, Bytes, Bytes) {
    (
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x10]),
            DBRequestType::ArtistRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x02, 0x04, 0x01]),
                DBField::from(0u32),
            ]),
        )),
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x10]),
            DBRequestType::Success,
            ArgumentCollection::new(vec![
                // TODO:
                // DBField::from(<u32>::from(DBRequestType::ArtistRequest))
                DBField::from([0x00, 0x00, 0x10, 0x02]),
                DBField::from(1u32),
            ]),
        )),
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x11]),
            DBRequestType::RenderRequest,
            ArgumentCollection::new(vec![
                DBField::from([0x02, 0x02, 0x04, 0x01]),
                DBField::from(0u32),
                DBField::from(1u32),
                DBField::from(0u32),
                DBField::from(1u32),
                DBField::from(0u32),
            ]),
        )),
        Bytes::from(ManyDBMessages::new(vec![
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x11]),
                DBRequestType::MenuHeader,
                ArgumentCollection::new(vec![
                    DBField::from(1u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x11]),
                DBRequestType::MenuItem,
                ArgumentCollection::new(vec![
                    DBField::from(0u32),
                    DBField::from(1u32),
                    DBField::from(24u32),
                    DBField::from("Loopmasters"),
                    DBField::from(2u32),
                    DBField::from(""),
                    DBField::from(metadata_type::ARTIST),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                    DBField::from(0u32),
                ]),
            ),
            DBMessage::new(
                DBField::from([0x05, 0x80, 0x00, 0x11]),
                DBRequestType::MenuFooter,
                ArgumentCollection::new(vec![]),
            ),
        ])),
    )
}

pub fn metadata_dialog() -> IntegrationTestDialog {
    (
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x1f, 0x10, 0x20, 0x02, 0x0f, 0x02, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x02, 0x01, 0x04, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x05
        ]),
        Bytes::from(DBMessage::new(
            DBField::from([0x05, 0x80, 0x00, 0x1f]),
            DBRequestType::Success,
            ArgumentCollection::new(vec![
                DBField::from([0x00, 0x00, 0x20, 0x02]),
                DBField::from([0x00, 0x00, 0x00, 0x0a]),
            ])
        )),
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x20, 0x10, 0x30, 0x00, 0x0f, 0x06, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x02, 0x01, 0x04, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0a, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x0a, 0x11, 0x00, 0x00, 0x00, 0x00
        ]),
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x20, 0x10, 0x40, 0x01, 0x0f, 0x02, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x20, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x01, 0x11,
            0x00, 0x00, 0x00, 0x05, 0x11, 0x00, 0x00, 0x00,
            0x1a, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x44,
            0x00, 0x65, 0x00, 0x6d, 0x00, 0x6f, 0x00, 0x20,
            0x00, 0x54, 0x00, 0x72, 0x00, 0x61, 0x00, 0x63,
            0x00, 0x6b, 0x00, 0x20, 0x00, 0x31, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x04, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x20, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x01, 0x11,
            0x00, 0x00, 0x00, 0x01, 0x11, 0x00, 0x00, 0x00,
            0x18, 0x26, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x4c,
            0x00, 0x6f, 0x00, 0x6f, 0x00, 0x70, 0x00, 0x6d,
            0x00, 0x61, 0x00, 0x73, 0x00, 0x74, 0x00, 0x65,
            0x00, 0x72, 0x00, 0x73, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x02, 0x26, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x07, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x20, 0x10, 0x41, 0x01, 0x0f, 0x0c, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x02,
            0x06, 0x02, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
            0x11, 0x00, 0x00, 0x00, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x26,
            0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x02, 0x26, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x20, 0x10, 0x41, 0x01, 0x0f, 0x0c, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x02,
            0x06, 0x02, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0xac, 0x11, 0x00, 0x00, 0x00, 0x02, 0x26,
            0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x02, 0x26, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0b, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x20, 0x10, 0x41, 0x01, 0x0f, 0x0c, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x02,
            0x06, 0x02, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x32, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x26,
            0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x02, 0x26, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x20, 0x10, 0x41, 0x01, 0x0f, 0x0c, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x02,
            0x06, 0x02, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x05, 0x11, 0x00, 0x00, 0x00, 0x3c, 0x26,
            0x00, 0x00, 0x00, 0x1e, 0x00, 0x54, 0x00, 0x72,
            0x00, 0x61, 0x00, 0x63, 0x00, 0x6b, 0x00, 0x73,
            0x00, 0x20, 0x00, 0x62, 0x00, 0x79, 0x00, 0x20,
            0x00, 0x77, 0x00, 0x77, 0x00, 0x77, 0x00, 0x2e,
            0x00, 0x6c, 0x00, 0x6f, 0x00, 0x6f, 0x00, 0x70,
            0x00, 0x6d, 0x00, 0x61, 0x00, 0x73, 0x00, 0x74,
            0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00, 0x2e,
            0x00, 0x63, 0x00, 0x6f, 0x00, 0x6d, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x23, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x20, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x01, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x02, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x0f, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x20, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x02, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x0a, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x20, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x02, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x13, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x20, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x02, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x20, 0x10, 0x42, 0x01, 0x0f,
            0x00, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00
        ]),
    )
}

pub fn mount_info_request_dialog() -> IntegrationTestDialog {
    (
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x22, 0x10, 0x21, 0x02, 0x0f, 0x02, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x02, 0x08, 0x04, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x05
        ]),
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x22, 0x10, 0x40, 0x00, 0x0f, 0x02, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x21, 0x02, 0x11, 0x00, 0x00,
            0x00, 0x06
        ]),
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x23, 0x10, 0x30, 0x00, 0x0f, 0x06, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x02, 0x08, 0x04, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x06, 0x11, 0x00, 0x00, 0x00, 0x00
        ]),
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x23, 0x10, 0x40, 0x01, 0x0f, 0x02, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x23, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x01, 0x11, 0x00, 0x00, 0x00,
            0x02, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x04, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x23, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0xac, 0x11, 0x00, 0x00, 0x00,
            0x02, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x0b, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x23, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x32, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x02, 0x26, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x0d, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x87, 0x23, 0x49, 0xae, 0x11,
            0x05, 0x80, 0x00, 0x23, 0x10, 0x41, 0x01, 0x0f,
            0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x06,
            0x06, 0x02, 0x06, 0x02, 0x06, 0x06, 0x06, 0x06,
            0x06, 0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
            0x3c, 0x26, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x54,
            0x00, 0x72, 0x00, 0x61, 0x00, 0x63, 0x00, 0x6b,
            0x00, 0x73, 0x00, 0x20, 0x00, 0x62, 0x00, 0x79,
            0x00, 0x20, 0x00, 0x77, 0x00, 0x77, 0x00, 0x77,
            0x00, 0x2e, 0x00, 0x6c, 0x00, 0x6f, 0x00, 0x6f,
            0x00, 0x70, 0x00, 0x6d, 0x00, 0x61, 0x00, 0x73,
            0x00, 0x74, 0x00, 0x65, 0x00, 0x72, 0x00, 0x73,
            0x00, 0x2e, 0x00, 0x63, 0x00, 0x6f, 0x00, 0x6d,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x26,
            0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x23, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x87, 0x23, 0x49,
            0xae, 0x11, 0x05, 0x80, 0x00, 0x23, 0x10, 0x41,
            0x01, 0x0f, 0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c,
            0x06, 0x06, 0x06, 0x02, 0x06, 0x02, 0x06, 0x06,
            0x06, 0x06, 0x06, 0x06, 0x11, 0x00, 0x69, 0x47,
            0xa8, 0x11, 0x00, 0x00, 0x00, 0x05, 0x11, 0x00,
            0x00, 0x00, 0x7a, 0x26, 0x00, 0x00, 0x00, 0x3d,
            0x00, 0x43, 0x00, 0x3a, 0x00, 0x2f, 0x00, 0x55,
            0x00, 0x73, 0x00, 0x65, 0x00, 0x72, 0x00, 0x73,
            0x00, 0x2f, 0x00, 0x53, 0x00, 0x6e, 0x00, 0x61,
            0x00, 0x61, 0x00, 0x6a, 0x00, 0x66, 0x00, 0x2f,
            0x00, 0x4d, 0x00, 0x75, 0x00, 0x73, 0x00, 0x69,
            0x00, 0x63, 0x00, 0x2f, 0x00, 0x50, 0x00, 0x69,
            0x00, 0x6f, 0x00, 0x6e, 0x00, 0x65, 0x00, 0x65,
            0x00, 0x72, 0x00, 0x44, 0x00, 0x4a, 0x00, 0x2f,
            0x00, 0x44, 0x00, 0x65, 0x00, 0x6d, 0x00, 0x6f,
            0x00, 0x20, 0x00, 0x54, 0x00, 0x72, 0x00, 0x61,
            0x00, 0x63, 0x00, 0x6b, 0x00, 0x73, 0x00, 0x2f,
            0x00, 0x44, 0x00, 0x65, 0x00, 0x6d, 0x00, 0x6f,
            0x00, 0x20, 0x00, 0x54, 0x00, 0x72, 0x00, 0x61,
            0x00, 0x63, 0x00, 0x6b, 0x00, 0x20, 0x00, 0x31,
            0x00, 0x2e, 0x00, 0x6d, 0x00, 0x70, 0x00, 0x33,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x26,
            0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x87, 0x23, 0x49,
            0xae, 0x11, 0x05, 0x80, 0x00, 0x23, 0x10, 0x41,
            0x01, 0x0f, 0x0c, 0x14, 0x00, 0x00, 0x00, 0x0c,
            0x06, 0x06, 0x06, 0x02, 0x06, 0x02, 0x06, 0x06,
            0x06, 0x06, 0x06, 0x06, 0x11, 0x00, 0x00, 0x00,
            0x00, 0x11, 0x00, 0x00, 0x00, 0x01, 0x11, 0x00,
            0x00, 0x00, 0x02, 0x26, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x26,
            0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x11, 0x00,
            0x00, 0x00, 0x2f, 0x11, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x00, 0x11, 0x87, 0x23, 0x49,
            0xae, 0x11, 0x05, 0x80, 0x00, 0x23, 0x10, 0x42,
            0x01, 0x0f, 0x00, 0x14, 0x00, 0x00, 0x00, 0x0c,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00
        ]),
    )
}

pub fn load_track_request() -> (Bytes, Bytes) {
    (
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x21, 0x10, 0x2b, 0x04, 0x0f, 0x03, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x02, 0x08, 0x04, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x05, 0x11, 0x00, 0x00, 0x00, 0x00
        ]),
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x21, 0x10, 0x4e, 0x02, 0x0f, 0x05, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x03,
            0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x2b, 0x04, 0x11, 0x00, 0x00,
            0x00, 0x01, 0x11, 0x00, 0x00, 0x00, 0x00, 0x11,
            0x00, 0x00, 0x00, 0x00,
        ]),
    )
}

pub fn preview_waveform_request() -> (Bytes, Bytes) {
    (
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x1e, 0x10, 0x20, 0x04, 0x0f, 0x05, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x06,
            0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x02, 0x08, 0x04, 0x01, 0x11, 0x00, 0x00,
            0x00, 0x04, 0x11, 0x00, 0x00, 0x00, 0x05, 0x11,
            0x00, 0x00, 0x00, 0x00
        ]),
        Bytes::from(vec![
            0x11, 0x87, 0x23, 0x49, 0xae, 0x11, 0x05, 0x80,
            0x00, 0x1e, 0x10, 0x44, 0x02, 0x0f, 0x04, 0x14,
            0x00, 0x00, 0x00, 0x0c, 0x06, 0x06, 0x06, 0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x11, 0x00, 0x00, 0x20, 0x04, 0x11, 0x00, 0x00,
            0x00, 0x00, 0x11, 0x00, 0x00, 0x03, 0x88, 0x14,
            0x00, 0x00, 0x03, 0x88, 0x18, 0x00, 0x15, 0x00,
            0x16, 0x00, 0x18, 0x00, 0x14, 0x00, 0x0d, 0x00,
            0x18, 0x00, 0x15, 0x00, 0x17, 0x00, 0x17, 0x00,
            0x15, 0x00, 0x17, 0x00, 0x18, 0x00, 0x17, 0x00,
            0x18, 0x00, 0x17, 0x00, 0x15, 0x01, 0x0d, 0x01,
            0x17, 0x00, 0x17, 0x00, 0x17, 0x00, 0x17, 0x00,
            0x17, 0x00, 0x15, 0x00, 0x18, 0x00, 0x15, 0x00,
            0x16, 0x00, 0x18, 0x00, 0x11, 0x01, 0x11, 0x01,
            0x17, 0x00, 0x17, 0x00, 0x15, 0x00, 0x17, 0x00,
            0x18, 0x00, 0x16, 0x00, 0x15, 0x00, 0x15, 0x00,
            0x16, 0x03, 0x15, 0x03, 0x12, 0x03, 0x13, 0x03,
            0x0b, 0x05, 0x0f, 0x05, 0x14, 0x03, 0x12, 0x03,
            0x12, 0x03, 0x12, 0x03, 0x13, 0x02, 0x13, 0x02,
            0x13, 0x03, 0x15, 0x03, 0x16, 0x03, 0x12, 0x03,
            0x0f, 0x05, 0x08, 0x05, 0x15, 0x03, 0x14, 0x03,
            0x12, 0x03, 0x12, 0x03, 0x13, 0x00, 0x16, 0x00,
            0x12, 0x03, 0x13, 0x03, 0x15, 0x03, 0x13, 0x03,
            0x12, 0x03, 0x13, 0x03, 0x08, 0x05, 0x0e, 0x05,
            0x16, 0x03, 0x12, 0x03, 0x12, 0x02, 0x13, 0x02,
            0x16, 0x03, 0x0d, 0x03, 0x13, 0x03, 0x15, 0x03,
            0x0e, 0x05, 0x10, 0x05, 0x12, 0x03, 0x13, 0x03,
            0x13, 0x03, 0x13, 0x03, 0x12, 0x03, 0x12, 0x03,
            0x13, 0x00, 0x16, 0x00, 0x12, 0x03, 0x13, 0x03,
            0x12, 0x05, 0x08, 0x05, 0x13, 0x03, 0x12, 0x03,
            0x13, 0x03, 0x14, 0x03, 0x16, 0x03, 0x0d, 0x03,
            0x13, 0x02, 0x15, 0x02, 0x10, 0x03, 0x15, 0x03,
            0x13, 0x03, 0x15, 0x03, 0x09, 0x05, 0x12, 0x05,
            0x12, 0x03, 0x13, 0x03, 0x13, 0x03, 0x13, 0x03,
            0x0d, 0x02, 0x13, 0x02, 0x15, 0x03, 0x14, 0x03,
            0x13, 0x03, 0x13, 0x03, 0x0b, 0x05, 0x0f, 0x05,
            0x13, 0x03, 0x0f, 0x03, 0x12, 0x03, 0x16, 0x03,
            0x13, 0x02, 0x12, 0x02, 0x13, 0x03, 0x15, 0x03,
            0x10, 0x03, 0x14, 0x03, 0x0f, 0x05, 0x0b, 0x05,
            0x15, 0x03, 0x13, 0x03, 0x0f, 0x03, 0x12, 0x03,
            0x16, 0x03, 0x13, 0x03, 0x0e, 0x02, 0x13, 0x02,
            0x15, 0x03, 0x16, 0x03, 0x0d, 0x02, 0x11, 0x02,
            0x05, 0x05, 0x0f, 0x05, 0x11, 0x03, 0x0f, 0x03,
            0x12, 0x03, 0x0f, 0x03, 0x13, 0x02, 0x0e, 0x02,
            0x12, 0x03, 0x12, 0x03, 0x0e, 0x03, 0x12, 0x03,
            0x0e, 0x05, 0x09, 0x05, 0x11, 0x03, 0x14, 0x03,
            0x12, 0x03, 0x12, 0x03, 0x0e, 0x02, 0x14, 0x02,
            0x0d, 0x03, 0x11, 0x03, 0x13, 0x03, 0x13, 0x03,
            0x04, 0x05, 0x0c, 0x05, 0x10, 0x03, 0x12, 0x03,
            0x11, 0x03, 0x0f, 0x03, 0x14, 0x02, 0x15, 0x02,
            0x12, 0x02, 0x0a, 0x02, 0x11, 0x03, 0x12, 0x03,
            0x06, 0x05, 0x0e, 0x05, 0x10, 0x03, 0x10, 0x03,
            0x12, 0x03, 0x12, 0x03, 0x0e, 0x02, 0x11, 0x02,
            0x10, 0x03, 0x14, 0x03, 0x0a, 0x03, 0x13, 0x03,
            0x0a, 0x03, 0x11, 0x03, 0x10, 0x03, 0x13, 0x03,
            0x10, 0x03, 0x11, 0x03, 0x12, 0x03, 0x0d, 0x03,
            0x12, 0x02, 0x12, 0x02, 0x13, 0x03, 0x0e, 0x03,
            0x0d, 0x05, 0x06, 0x05, 0x12, 0x03, 0x0f, 0x03,
            0x0d, 0x03, 0x15, 0x03, 0x10, 0x03, 0x0a, 0x03,
            0x03, 0x05, 0x04, 0x05, 0x02, 0x05, 0x03, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x0e, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x05, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x0b, 0x05, 0x04, 0x05, 0x04, 0x05, 0x03, 0x05,
            0x03, 0x05, 0x02, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x06, 0x05, 0x09, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x02, 0x05, 0x05, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x02, 0x05, 0x0a, 0x05, 0x04, 0x05, 0x04, 0x05,
            0x03, 0x05, 0x03, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x02, 0x05, 0x04, 0x05, 0x08, 0x05, 0x02, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x05, 0x05, 0x02, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x05, 0x05, 0x06, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x04, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x0a, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x05, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x15, 0x02, 0x13, 0x02, 0x14, 0x03, 0x15, 0x03,
            0x13, 0x03, 0x15, 0x03, 0x14, 0x02, 0x12, 0x02,
            0x10, 0x05, 0x0f, 0x05, 0x17, 0x02, 0x17, 0x02,
            0x0b, 0x05, 0x11, 0x05, 0x15, 0x03, 0x11, 0x03,
            0x17, 0x03, 0x13, 0x03, 0x16, 0x03, 0x14, 0x03,
            0x16, 0x00, 0x15, 0x00, 0x14, 0x05, 0x0c, 0x05,
            0x15, 0x03, 0x15, 0x03, 0x15, 0x03, 0x15, 0x03,
            0x0f, 0x03, 0x15, 0x03, 0x16, 0x03, 0x15, 0x03,
            0x11, 0x02, 0x16, 0x02, 0x12, 0x05, 0x10, 0x05,
            0x17, 0x02, 0x17, 0x02, 0x09, 0x05, 0x13, 0x05,
            0x12, 0x03, 0x16, 0x03, 0x15, 0x03, 0x14, 0x03,
            0x16, 0x02, 0x14, 0x02, 0x15, 0x03, 0x15, 0x03,
            0x11, 0x05, 0x0c, 0x05, 0x12, 0x03, 0x16, 0x03,
            0x14, 0x03, 0x13, 0x03, 0x14, 0x03, 0x15, 0x03,
            0x0f, 0x00, 0x16, 0x00, 0x0c, 0x03, 0x12, 0x03,
            0x17, 0x02, 0x17, 0x02, 0x0a, 0x03, 0x11, 0x03,
            0x15, 0x03, 0x10, 0x03, 0x16, 0x03, 0x14, 0x03,
            0x15, 0x02, 0x13, 0x02, 0x15, 0x05, 0x08, 0x05,
            0x17, 0x02, 0x17, 0x02, 0x0a, 0x05, 0x10, 0x05,
            0x14, 0x03, 0x17, 0x03, 0x11, 0x03, 0x15, 0x03,
            0x14, 0x03, 0x15, 0x03, 0x14, 0x00, 0x17, 0x00,
            0x11, 0x03, 0x16, 0x03, 0x12, 0x05, 0x0a, 0x05,
            0x16, 0x03, 0x14, 0x03, 0x11, 0x03, 0x14, 0x03,
            0x15, 0x03, 0x16, 0x03, 0x14, 0x02, 0x10, 0x02,
            0x16, 0x03, 0x14, 0x03, 0x15, 0x03, 0x14, 0x03,
            0x0a, 0x05, 0x11, 0x05, 0x0f, 0x03, 0x17, 0x03,
            0x0d, 0x04, 0x05, 0x04, 0x02, 0x05, 0x02, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x02, 0x05, 0x02, 0x05, 0x02, 0x05, 0x02, 0x05,
            0x02, 0x03, 0x02, 0x05, 0x0e, 0x0e, 0x0f, 0x0f,
            0x0e, 0x0f, 0x0f, 0x0e, 0x0f, 0x0e, 0x0c, 0x0e,
            0x0e, 0x0c, 0x0e, 0x0e, 0x0c, 0x0e, 0x0e, 0x0c,
            0x0e, 0x0e, 0x0c, 0x0e, 0x0e, 0x0c, 0x0e, 0x0e,
            0x0c, 0x0e, 0x0e, 0x0c, 0x0e, 0x0c, 0x0e, 0x0d,
            0x0d, 0x0c, 0x0e, 0x0e, 0x0c, 0x0d, 0x0e, 0x0d,
            0x0d, 0x0d, 0x0c, 0x0e, 0x0d, 0x0c, 0x0d, 0x0e,
            0x08, 0x02, 0x07, 0x04, 0x05, 0x02, 0x07, 0x04,
            0x02, 0x05, 0x02, 0x07, 0x04, 0x05, 0x04, 0x05,
            0x05, 0x05, 0x0e, 0x0e, 0x0e, 0x0d, 0x0e, 0x0d,
            0x0e, 0x0e, 0x0e, 0x0c, 0x0e, 0x0e, 0x0c, 0x0e,
            0x0e, 0x0d, 0x0e, 0x0d, 0x0e, 0x0e, 0x0e, 0x0c,
            0x0e, 0x0e, 0x0d, 0x0e, 0x02, 0x01, 0x01, 0x01,
            0x9e, 0xeb, 0x78, 0x10
        ]),
    )
}

pub fn rekordbox_hello() -> Bytes {
    Bytes::from(vec![
        81, 115, 112, 116, 49, 87, 109, 74, 79, 76, 16, 88, 68, 74, 45, 55, 48, 48, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0,
    ])
}

pub fn link_query() -> Bytes {
    Bytes::from(vec![
        81, 115, 112, 116, 49, 87, 109, 74, 79, 76, 5, 88, 68, 74, 45, 55, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 12, 192, 168, 10, 58, 0, 0, 0, 17, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    ])
}
